apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        applicationId "com.jeckliu.hoggerel"

    }

    signingConfigs {
        myConfigs {
            storeFile file("./keyStore/hoggerel.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.myConfigs
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfigs
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

        lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$rootProject.libraryVersion"
    compile project(path: ':appframwork')
    compile project(path: ':multimedia')
    compile project(path: ':codescanner')
    compile project(path: ':push')
    compile project(path: ':pay')
    compile project(path: ':im')
}
